{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAwBA,SAASC,EAAcC,EAAUC,GAC7B,OAAO,IAAIC,SAAS,CAACC,EAASC,KAC9B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAY,KACNH,EACFF,EAAQ,uBAAqBH,QAAiBC,OAE5CG,EAAK,sBAAoBJ,QAAeC,MAAU,GAErDA,EAAM,G,CA/BAQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAqBC,GACnBA,EAAMC,iBAEN,MAAOC,UAAUb,MAACA,EAAKc,KAAEA,EAAIC,OAAEA,IAAWJ,EAAMK,cAEhD,IAAIC,EAAaC,OAAOlB,EAAMmB,OAC9B,IAAK,IAAIC,EAAI,EAAGA,GAAKL,EAAOI,MAAOC,IAAK,CAEtCtB,EADiBsB,EACOH,GAAYI,MAAMC,IACxC1B,EAAA2B,OAAOC,QAAQF,EAAO,IAEvBG,OAAOC,IACN9B,EAAA2B,OAAOI,QAAQD,EAAM,IAEvBT,GAAcC,OAAOJ,EAAKK,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onCreateBtn);\n\nfunction onCreateBtn(event) {\n  event.preventDefault();\n  \n  const {elements: {delay, step, amount}} = event.currentTarget;\n  \n  let totalDelay = Number(delay.value);\n  for (let i = 1; i <= amount.value; i++) {\n    const position = i;\n    createPromise(position, totalDelay).then((result) => {\n      Notify.success(result);\n    })\n    .catch((error) => {\n      Notify.failure(error);\n    });\n    totalDelay += Number(step.value);\n  }\n}\n\nfunction createPromise(position, delay) {\n    return new Promise ((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout (() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay)\n  })\n\n}\n\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","elements","step","amount","currentTarget","totalDelay","Number","value","i","then","result","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.582a778f.js.map"}